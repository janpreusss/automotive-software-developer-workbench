# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

name: git-remote-s3-windows
description: "Install git-remote-s3"
schemaVersion: 1.0
on: 
  push:
    branches:
      - master
phases:
  - name: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
        python-version: '>~3.9'

      - name: UpdatePip-installgit-remote-s3
        action: ExecutePowerShell
        onFailure: Abort
        timeoutSeconds: 600
        inputs:
          commands:
            - |-
              $ErrorActionPreference = 'Stop'
              $ProgressPreference = 'SilentlyContinue'
              python -m pip install --upgrade pip
              pip install git-remote-s3

      - name: Cleanup
        action: ExecutePowerShell
        inputs:
          commands:
            - |
              $ErrorActionPreference = 'Stop'
              @(
                  '{{ build.Installer.outputs.stdout }}'
              ) | ForEach-Object {
                  Write-Host "Deleting '$_'"

                  $getItem = @{
                      Path        = $_
                      ErrorAction = 'SilentlyContinue'
                  }
                  Get-Item @getItem | Remove-Item -Force
              }